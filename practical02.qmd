---
title: "Getting started with R"
author: Haolin ZOU
date: 23th Sep 2024
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
# Your answer in code
V_L <- c("A","B","C")
V_L
```
> Your answer as text
The vector name is V_L
 "A" "B" "C"


* Assign the vector to a variable `my_letters`
```{r}
# Your answer in code
my_letters <- V_L
my_letters
```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
# Your answer in code
letters
```

> Your answer as text



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
# Your answer in code
Con_V <- c(my_letters,my_letters)
Con_V
```

> Your answer as text



* Add the number 1 to letters. What happens to the type of the vector?
```{r}
# Your answer in code
V_add <- c(letters,1)
V_add
```

> Your answer as text



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
# Your answer in code
my_vec <- 1:8
my_vec_1 <- my_vec + 2
my_vec_1
my_vec_2 <- my_vec + c(1,2,3,4)
my_vec_2
```



### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
# Your answer in code
A <- matrix(c(4,9,10,1,5,7),3,2)
A
dim(A)
A[2,2]
A <- cbind(A, c(0,0,0))
A
A[1,1] <- 0
A
A_T <- t(A)
A_T
```


8. Are any values in `A` larger than 10? 
```{r}
# Your answer in code
any(A > 10)
```

9. Are all values in `A` smaller than 10?
```{r}
# Your answer in code
all(A < 10)
```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}
# Your answer in code
# Your answer in code
F_sum <- function(a,b){
    as.numeric(a) + as.numeric(b)
}
```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
# Your answer in code
F_A <- function(x){
    data.frame(
    X_mean = mean(x), X_median = median(x), X_sd = sd(x) 
    )
}
x <- c(1,2,3,4,5,6,7,8,9) #example
F_A(x)

```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
# Your answer in code
library(magrittr)
library(dplyr)
library(tidyverse)
c('1' , "a", NA, "2", NA) %>%
    is.na() %>%
    sum()
```


